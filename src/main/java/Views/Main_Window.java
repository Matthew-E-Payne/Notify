/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author nando
 */
public class Main_Window extends javax.swing.JFrame {

    /**
     * Creates new form Main_Window
     */
    public Main_Window() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        Song_Progress_Slider = new javax.swing.JSlider();
        Next_Song_Button = new javax.swing.JButton();
        Previous_Song_Button = new javax.swing.JButton();
        Song_Image_Label = new javax.swing.JLabel();
        Total_Time_Label = new javax.swing.JLabel();
        Current_Time_Label = new javax.swing.JLabel();
        Play_Pause_Button = new javax.swing.JButton();
        Import_Song_Button = new javax.swing.JButton();
        Song_Name_Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Song_Table = new javax.swing.JTable();
        Remove_Song_Button = new javax.swing.JButton();
        Volume_Slider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Input_Song_Choice = new javax.swing.JTextField();
        Select_Song_Button = new javax.swing.JButton();
        Clear_Playlist_Button = new javax.swing.JButton();
        Save_Playlist_Button = new javax.swing.JButton();
        Exit_Button = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setPreferredSize(new java.awt.Dimension(640, 480));

        Song_Progress_Slider.setMinimumSize(new java.awt.Dimension(0, 0));

        Next_Song_Button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Next_Song_Button.setText("Next");
        Next_Song_Button.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        Next_Song_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_Song_ButtonActionPerformed(evt);
            }
        });

        Previous_Song_Button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Previous_Song_Button.setText("Previous");
        Previous_Song_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_Song_ButtonActionPerformed(evt);
            }
        });

        Song_Image_Label.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Song_Image_Label.setMinimumSize(new java.awt.Dimension(0, 0));

        Total_Time_Label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Total_Time_Label.setText("00:00:00");

        Current_Time_Label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Current_Time_Label.setText("00:00:00");

        Play_Pause_Button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Play_Pause_Button.setText("Play");
        Play_Pause_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Play_Pause_ButtonActionPerformed(evt);
            }
        });

        Import_Song_Button.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Import_Song_Button.setText("Import Song");

        Song_Name_Label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Song_Name_Label.setText("No Song Selected");

        Song_Table.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        Song_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Title", "Duration"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Song_Table.setSurrendersFocusOnKeystroke(true);
        jScrollPane2.setViewportView(Song_Table);

        Remove_Song_Button.setBackground(new java.awt.Color(255, 255, 51));
        Remove_Song_Button.setText("REMOVE SONG");
        Remove_Song_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Song_ButtonActionPerformed(evt);
            }
        });

        Volume_Slider.setMinimumSize(new java.awt.Dimension(0, 0));

        jLabel1.setText("Volume:");

        jLabel2.setText("Input Song Number:");

        Select_Song_Button.setText("Select Song");
        Select_Song_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Select_Song_ButtonActionPerformed(evt);
            }
        });

        Clear_Playlist_Button.setBackground(new java.awt.Color(255, 51, 0));
        Clear_Playlist_Button.setForeground(new java.awt.Color(255, 255, 255));
        Clear_Playlist_Button.setText("CLEAR PLAYLIST");
        Clear_Playlist_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_Playlist_ButtonActionPerformed(evt);
            }
        });

        Save_Playlist_Button.setBackground(new java.awt.Color(51, 255, 0));
        Save_Playlist_Button.setText("SAVE PLAYLIST");

        Exit_Button.setBackground(new java.awt.Color(204, 204, 204));
        Exit_Button.setForeground(new java.awt.Color(255, 51, 0));
        Exit_Button.setText("EXIT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(Import_Song_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(Song_Name_Label)
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(Exit_Button))
                                    .addComponent(Song_Image_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Current_Time_Label)
                                                .addGap(18, 18, 18)
                                                .addComponent(Song_Progress_Slider, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Previous_Song_Button)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                                .addComponent(Play_Pause_Button)
                                                .addGap(0, 53, Short.MAX_VALUE)))
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Total_Time_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Next_Song_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Clear_Playlist_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Remove_Song_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Save_Playlist_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Volume_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Input_Song_Choice, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Select_Song_Button)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Import_Song_Button)
                        .addComponent(Song_Name_Label))
                    .addComponent(Exit_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Song_Image_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Song_Progress_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Total_Time_Label)
                            .addComponent(Current_Time_Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Next_Song_Button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Previous_Song_Button)
                            .addComponent(Play_Pause_Button))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Input_Song_Choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Select_Song_Button))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Volume_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(Clear_Playlist_Button)
                    .addComponent(Remove_Song_Button)
                    .addComponent(Save_Playlist_Button))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Previous_Song_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_Song_ButtonActionPerformed
        // THIS FUNCTION SHOULD MOVE TO THE PREVIOUS SONG IN THE PLAYLIST
        // TODO add your handling code here:
    }//GEN-LAST:event_Previous_Song_ButtonActionPerformed

    private void Next_Song_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_Song_ButtonActionPerformed
        // THIS FUNCTION SHOULD MOVE TO THE NEXT SONG IN THE PLAYLIST
        // TODO add your handling code here:
    }//GEN-LAST:event_Next_Song_ButtonActionPerformed

    private void Play_Pause_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Play_Pause_ButtonActionPerformed
        // THIS FUNCTION SHOULD PERFORM THE PAUSING AND PLAYING OF THE SONG
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Play_Pause_ButtonActionPerformed

    private void Remove_Song_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Song_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Remove_Song_ButtonActionPerformed

    private void Select_Song_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Select_Song_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Select_Song_ButtonActionPerformed

    private void Clear_Playlist_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_Playlist_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Clear_Playlist_ButtonActionPerformed
    
    public void Import_Song_Button_Listener(ActionListener AL) {
        Import_Song_Button.addActionListener(AL);
    }
    
    public DefaultTableModel Get_Song_Table_Model(){
        return (DefaultTableModel)Song_Table.getModel();
    }
    
    public void Set_Song_Table_Model(DefaultTableModel newModel){
        Song_Table.setModel(newModel);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear_Playlist_Button;
    private javax.swing.JLabel Current_Time_Label;
    private javax.swing.JButton Exit_Button;
    private javax.swing.JButton Import_Song_Button;
    private javax.swing.JTextField Input_Song_Choice;
    private javax.swing.JButton Next_Song_Button;
    private javax.swing.JButton Play_Pause_Button;
    private javax.swing.JButton Previous_Song_Button;
    private javax.swing.JButton Remove_Song_Button;
    private javax.swing.JButton Save_Playlist_Button;
    private javax.swing.JButton Select_Song_Button;
    private javax.swing.JLabel Song_Image_Label;
    private javax.swing.JLabel Song_Name_Label;
    private javax.swing.JSlider Song_Progress_Slider;
    private javax.swing.JTable Song_Table;
    private javax.swing.JLabel Total_Time_Label;
    private javax.swing.JSlider Volume_Slider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
